# Docker Compose simplificado para desenvolvimento
# Inclui apenas a aplicação principal e Prometheus para desenvolvimento local

services:
  # Aplicação principal - k8s-api-metrics
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: k8s-api-metrics-dev
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - EXPECTED_AUTH_TOKEN=dev-token-123456
    volumes:
      # Mount do código fonte para development com hot reload
      - .:/app/src:ro
      # Mount kubeconfig se disponível
      - ${HOME}/.kube:/home/appuser/.kube:ro
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8080"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - dev-network

  # Prometheus para coleta de métricas
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus-dev
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    restart: unless-stopped
    networks:
      - dev-network

  # PostgreSQL para testes (opcional)
  postgres:
    image: postgres:15-alpine
    container_name: postgres-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=k8s_metrics_dev
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - dev-network

volumes:
  postgres_dev_data:
    driver: local

networks:
  dev-network:
    driver: bridge
